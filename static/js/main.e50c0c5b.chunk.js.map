{"version":3,"sources":["App.js","index.js"],"names":["App","state","feedback","good","neutral","bad","handleTotalFeedback","Object","values","reduce","acc","value","handlePositiveVotes","toFixed","incrimentNeutral","setState","prevState","incrimentGood","incrimentBad","this","type","onClick","Component","ReactDom","render","document","getElementById"],"mappings":"yyBAEqBA,E,2MACnBC,MAAQ,CACNC,SAAU,CACRC,KAAM,EACNC,QAAS,EACTC,IAAK,I,EAITC,oBAAsB,WACpB,OAAOC,OAAOC,OAAO,EAAKP,MAAMC,UAAUO,QACxC,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,M,EAI1BC,oBAAsB,WACpB,OACG,EAAKX,MAAMC,SAASC,KAAO,EAAKG,sBACjC,KACAO,QAAQ,I,EAGZC,iBAAmB,WAAO,IAChBZ,EAAa,EAAKD,MAAlBC,SACR,EAAKa,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,SAAS,EAAD,GACHA,EADG,CAENE,QAASY,EAAUd,SAASE,QAAU,S,EAK5Ca,cAAgB,WAAO,IACbf,EAAa,EAAKD,MAAlBC,SAER,EAAKa,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,SAAS,EAAD,GAAOA,EAAP,CAAiBC,KAAMa,EAAUd,SAASC,KAAO,S,EAI7De,aAAe,WAAO,IACZhB,EAAa,EAAKD,MAAlBC,SAER,EAAKa,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,SAAS,EAAD,GAAOA,EAAP,CAAiBG,IAAKW,EAAUd,SAASG,IAAM,S,wEAIjD,IACAH,EAAaiB,KAAKlB,MAAlBC,SACAC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,QAASC,EAAQH,EAARG,IACvB,OACE,6BACE,8CACA,4BAAQe,KAAK,SAASC,QAASF,KAAKF,eAApC,QAGA,4BAAQG,KAAK,SAASC,QAASF,KAAKL,kBAApC,WAGA,4BAAQM,KAAK,SAASC,QAASF,KAAKD,cAApC,OAGA,2CAECC,KAAKb,sBACJ,oCACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWc,KAAKb,uBAChB,8CAAoBa,KAAKP,sBAAzB,MAGF,qD,GA1EuBU,aCEjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e50c0c5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    feedback: {\r\n      good: 0,\r\n      neutral: 0,\r\n      bad: 0,\r\n    },\r\n  };\r\n\r\n  handleTotalFeedback = () => {\r\n    return Object.values(this.state.feedback).reduce(\r\n      (acc, value) => acc + value,\r\n    );\r\n  };\r\n\r\n  handlePositiveVotes = () => {\r\n    return (\r\n      (this.state.feedback.good / this.handleTotalFeedback()) *\r\n      100\r\n    ).toFixed(2);\r\n  };\r\n\r\n  incrimentNeutral = () => {\r\n    const { feedback } = this.state;\r\n    this.setState(prevState => ({\r\n      feedback: {\r\n        ...feedback,\r\n        neutral: prevState.feedback.neutral + 1,\r\n      },\r\n    }));\r\n  };\r\n\r\n  incrimentGood = () => {\r\n    const { feedback } = this.state;\r\n\r\n    this.setState(prevState => ({\r\n      feedback: { ...feedback, good: prevState.feedback.good + 1 },\r\n    }));\r\n  };\r\n\r\n  incrimentBad = () => {\r\n    const { feedback } = this.state;\r\n\r\n    this.setState(prevState => ({\r\n      feedback: { ...feedback, bad: prevState.feedback.bad + 1 },\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { feedback } = this.state;\r\n    const { good, neutral, bad } = feedback;\r\n    return (\r\n      <div>\r\n        <h1>Leave feedback</h1>\r\n        <button type=\"button\" onClick={this.incrimentGood}>\r\n          Good\r\n        </button>\r\n        <button type=\"button\" onClick={this.incrimentNeutral}>\r\n          Neutral\r\n        </button>\r\n        <button type=\"button\" onClick={this.incrimentBad}>\r\n          Bad\r\n        </button>\r\n        <h2>Statistics:</h2>\r\n\r\n        {this.handleTotalFeedback() ? (\r\n          <>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {this.handleTotalFeedback()}</p>\r\n            <p>Positive votes: {this.handlePositiveVotes()}%</p>\r\n          </>\r\n        ) : (\r\n          <p>no feedback given</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}